name: Standard CI

on:
  workflow_call:
    inputs:
      runs-on:
        required: true
        type: string

permissions:
  contents: read

jobs:
  discover:
    outputs:
      hits: ${{ steps.discovery.outputs.hits }}
      nix_conf: ${{ steps.discovery.outputs.nix_conf }}

    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Standard Discovery
        uses: divnix/std-action/discover@v0.20.5
        id: discovery

  build_cli:
    needs: discover
    if: fromJSON(needs.discover.outputs.hits).cli.build != ''
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJSON(needs.discover.outputs.hits).cli.build }}
    name: ${{ matrix.target.action }}->${{ matrix.target.cell }}.${{ matrix.target.block }}.${{ matrix.target.name }}
    runs-on: ${{ inputs.runs-on }}
    steps:
      - uses: divnix/std-action/run@v0.20.5
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.S3_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET }}
        with:
          nix_key: ${{ secrets.NIX_KEY }}
          cache: s3://cache.divnix.com?endpoint=fra1.digitaloceanspaces.com
          extra_nix_config: ${{ needs.discover.outputs.nix_conf }}
          json: ${{ toJSON(matrix.target) }}

  build_packages:
    needs: discover
    if: fromJSON(needs.discover.outputs.hits).packages.build != ''
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJSON(needs.discover.outputs.hits).packages.build }}
    name: ${{ matrix.target.action }}->${{ matrix.target.cell }}.${{ matrix.target.block }}.${{ matrix.target.name }}
    runs-on: ${{ inputs.runs-on }}
    steps:
      - uses: divnix/std-action/run@v0.20.5
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.S3_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET }}
        with:
          nix_key: ${{ secrets.NIX_KEY }}
          cache: s3://cache.divnix.com?endpoint=fra1.digitaloceanspaces.com
          extra_nix_config: ${{ needs.discover.outputs.nix_conf }}
          json: ${{ toJSON(matrix.target) }}

  build_devshells:
    needs: discover
    if: fromJSON(needs.discover.outputs.hits).devshells.build != ''
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJSON(needs.discover.outputs.hits).devshells.build }}
    name: ${{ matrix.target.action }}->${{ matrix.target.cell }}.${{ matrix.target.block }}.${{ matrix.target.name }}
    runs-on: ${{ inputs.runs-on }}
    steps:
      - uses: divnix/std-action/run@v0.20.5
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.S3_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET }}
        with:
          nix_key: ${{ secrets.NIX_KEY }}
          cache: s3://cache.divnix.com?endpoint=fra1.digitaloceanspaces.com
          extra_nix_config: ${{ needs.discover.outputs.nix_conf }}
          json: ${{ toJSON(matrix.target) }}
